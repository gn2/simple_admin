!!!
%html{:xmlns => "http://www.w3.org/1999/xhtml", "xml:lang".to_sym  => "en", :lang => "en"}
  %head
    -#FIXME : move strip html shit to helper
    -page_title = yield(:page_title)
    %title= "#{SimpleConfig::Site.title} - #{page_title.blank? ? 'Admin' : page_title.gsub(/<\/?[^>]*>/, "")}"
    = stylesheet_link_tag 'application', 'admin', 'markitup/style', 'markdown/style', 'facebox', :media => :screen

  %body
    #wrapper
      #top-menu
        #account
          / Render account menu here
          - if !current_user
            = link_to("Sign in", signin_path)
          - else
            %span.name= "Welcome, #{current_user.name}!"
            = link_to("My Account", admin_user_path(current_user))
            = link_to("Visit website", "/", :target => "_blank")
            = link_to("Sign out", user_session_path, :method => :delete, :confirm => "Are you sure you want to sign out?")
        / Render breadcrumbs here
        -# FIXME: Put that in a helper
        -# TODO: Make these bad boys links!
        -request.env['REQUEST_PATH'].split('/').compact.each do |p|
          -unless p.empty? || (p.to_i.to_s == p.strip) || (p.strip =~ /edit|new/)
            #{p.titlecase} >
        =@controller.action_name.titlecase

      #header
        #quick-search
          / search box

        %h1= link_to(SimpleConfig::Site.title, admin_path)

        - if defined?(current_user) && current_user
          #main-menu
            %ul
              -selected_tab_set = false
              -# FIXME Horrible stuff. Create something to select first tab
              -SimpleAdmin::Tabs.instance.ordered_list.unshift({:name => :dashboard, :path => :admin_dashboard_path}).each do |tab|
                -# TODO: Move that to helper
                - unless selected_tab_set
                  - klass = (tab[:name].to_s =~ /#{@controller.controller_name}|#{request.env['REQUEST_PATH'].split('/')[2]}/) ? 'selected' : ''
                  - selected_tab_set = true unless klass.empty?
                %li= link_to tab[:name].to_s.titlecase, send(tab[:path]), :class => klass || ''

      #main
        / main div can have nosidebar class if there is no sidebar
        #sidebar
          / render sidebar
          = yield(:sidebar)

        #content
          -if page_title
            %h2= yield(:page_title)
          = content_tag('div', flash[:error], :class => 'flash error') if flash[:error] && !flash[:error].empty?
          = content_tag('div', flash[:notice], :class => 'flash notice') if flash[:notice] && flash[:notice].empty?
          = yield

      #footer

    = javascript_tag "var AUTH_TOKEN = #{form_authenticity_token.inspect};" if protect_against_forgery?
    = javascript_include_tag 'jquery-1.3.2.min.js', 'jquery-ui', 'jrails'
    = javascript_include_tag 'autoresize.jquery.min', 'markitup/jquery.markitup.pack', "markitup/markdown.js", 'jquery.tablednd', 'jquery.livequery', 'facebox'
    = javascript_include_tag 'admin'
